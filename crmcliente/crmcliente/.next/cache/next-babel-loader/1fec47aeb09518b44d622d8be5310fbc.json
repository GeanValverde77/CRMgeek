{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geanm\\\\Downloads\\\\crmcliente\\\\crmcliente\\\\context\\\\pedidos\\\\PedidoState.js\";\nvar __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport React, { useReducer } from 'react';\nimport PedidoContext from './PedidoContext';\nimport PedidoReducer from './PedidoReducer';\nimport { SELECCIONAR_CLIENTE, SELECCIONAR_PRODUCTO, CANTIDAD_PRODUCTOS, ACTUALIZAR_TOTAL } from '../../types';\nconst PedidoState = ({\n  children\n}) => {\n  // State de Pedidos\n  const initialState = {\n    cliente: {},\n    productos: [],\n    total: 0\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(PedidoReducer, initialState);\n\n  // Modifica el Cliente\n  const agregarCliente = cliente => {\n    // console.log(cliente);\n\n    dispatch({\n      type: SELECCIONAR_CLIENTE,\n      payload: cliente\n    });\n  };\n\n  // Modifica los productos\n  const agregarProducto = productosSeleccionados => {\n    let nuevoState;\n    if (state.productos.length > 0) {\n      // Tomar del segundo arreglo, una copia para asignarlo al primero\n      nuevoState = productosSeleccionados.map(producto => {\n        const nuevoObjeto = state.productos.find(productoState => productoState.id === producto.id);\n        return _objectSpread({}, producto, {}, nuevoObjeto);\n      });\n    } else {\n      nuevoState = productosSeleccionados;\n    }\n    dispatch({\n      type: SELECCIONAR_PRODUCTO,\n      payload: nuevoState\n    });\n  };\n\n  // Modifica las cantidades de los productos\n  const cantidadProductos = nuevoProducto => {\n    dispatch({\n      type: CANTIDAD_PRODUCTOS,\n      payload: nuevoProducto\n    });\n  };\n  const actualizarTotal = () => {\n    dispatch({\n      type: ACTUALIZAR_TOTAL\n    });\n  };\n  return __jsx(PedidoContext.Provider, {\n    value: {\n      cliente: state.cliente,\n      productos: state.productos,\n      total: state.total,\n      agregarCliente,\n      agregarProducto,\n      cantidadProductos,\n      actualizarTotal\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \" \", children);\n};\nexport default PedidoState;","map":{"version":3,"names":["React","useReducer","PedidoContext","PedidoReducer","SELECCIONAR_CLIENTE","SELECCIONAR_PRODUCTO","CANTIDAD_PRODUCTOS","ACTUALIZAR_TOTAL","PedidoState","children","initialState","cliente","productos","total","state","dispatch","agregarCliente","type","payload","agregarProducto","productosSeleccionados","nuevoState","length","map","producto","nuevoObjeto","find","productoState","id","_objectSpread","cantidadProductos","nuevoProducto","actualizarTotal","__jsx","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/geanm/Downloads/crmcliente/crmcliente/context/pedidos/PedidoState.js"],"sourcesContent":["import  React, { useReducer } from 'react';\nimport PedidoContext from './PedidoContext';\nimport PedidoReducer from './PedidoReducer';\n\nimport {\n    SELECCIONAR_CLIENTE,\n    SELECCIONAR_PRODUCTO,\n    CANTIDAD_PRODUCTOS,\n    ACTUALIZAR_TOTAL\n} from '../../types'\n\nconst PedidoState = ({children}) => {\n\n    // State de Pedidos\n    const initialState = {\n        cliente: {},\n        productos: [],\n        total: 0\n    }\n\n    const [ state, dispatch ] = useReducer(PedidoReducer, initialState);\n\n    // Modifica el Cliente\n    const agregarCliente = cliente => {\n        // console.log(cliente);\n\n        dispatch({\n            type: SELECCIONAR_CLIENTE,\n            payload: cliente\n        })\n    }\n\n    // Modifica los productos\n    const agregarProducto = productosSeleccionados => {\n\n        let nuevoState;\n        if(state.productos.length > 0 ) {\n            // Tomar del segundo arreglo, una copia para asignarlo al primero\n            nuevoState = productosSeleccionados.map( producto => {\n                const nuevoObjeto = state.productos.find( productoState => productoState.id === producto.id  );\n                return {...producto, ...nuevoObjeto }\n            } )\n        } else {\n            nuevoState = productosSeleccionados;\n        }\n       \n        dispatch({\n            type: SELECCIONAR_PRODUCTO,\n            payload: nuevoState\n        })\n    }\n\n    // Modifica las cantidades de los productos\n    const cantidadProductos = nuevoProducto => {\n        dispatch({\n            type: CANTIDAD_PRODUCTOS,\n            payload: nuevoProducto\n        })\n    }\n\n    const actualizarTotal = () => {\n        dispatch({\n            type: ACTUALIZAR_TOTAL\n        })\n    }\n\n\n    return (\n        <PedidoContext.Provider\n            value={{\n                cliente: state.cliente,\n                productos: state.productos,\n                total: state.total,\n                agregarCliente,\n                agregarProducto,\n                cantidadProductos,\n                actualizarTotal\n            }}\n        > {children}\n        </PedidoContext.Provider>\n    )\n}\n\nexport default PedidoState;"],"mappings":";;;;;;;AAAA,OAAQA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAC1C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,SACIC,mBAAmB,EACnBC,oBAAoB,EACpBC,kBAAkB,EAClBC,gBAAgB,QACb,aAAa;AAEpB,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAEhC;EACA,MAAMC,YAAY,GAAG;IACjBC,OAAO,EAAE,CAAC,CAAC;IACXC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE;EACX,CAAC;EAED,MAAM;IAAA,GAAEC,KAAK;IAAA,GAAEC;EAAQ,IAAKd,UAAU,CAACE,aAAa,EAAEO,YAAY,CAAC;;EAEnE;EACA,MAAMM,cAAc,GAAGL,OAAO,IAAI;IAC9B;;IAEAI,QAAQ,CAAC;MACLE,IAAI,EAAEb,mBAAmB;MACzBc,OAAO,EAAEP;IACb,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMQ,eAAe,GAAGC,sBAAsB,IAAI;IAE9C,IAAIC,UAAU;IACd,IAAGP,KAAK,CAACF,SAAS,CAACU,MAAM,GAAG,CAAC,EAAG;MAC5B;MACAD,UAAU,GAAGD,sBAAsB,CAACG,GAAG,CAAEC,QAAQ,IAAI;QACjD,MAAMC,WAAW,GAAGX,KAAK,CAACF,SAAS,CAACc,IAAI,CAAEC,aAAa,IAAIA,aAAa,CAACC,EAAE,KAAKJ,QAAQ,CAACI,EAAI,CAAC;QAC9F,OAAAC,aAAA,KAAWL,QAAQ,MAAKC,WAAW;MACvC,CAAE,CAAC;IACP,CAAC,MAAM;MACHJ,UAAU,GAAGD,sBAAsB;IACvC;IAEAL,QAAQ,CAAC;MACLE,IAAI,EAAEZ,oBAAoB;MAC1Ba,OAAO,EAAEG;IACb,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMS,iBAAiB,GAAGC,aAAa,IAAI;IACvChB,QAAQ,CAAC;MACLE,IAAI,EAAEX,kBAAkB;MACxBY,OAAO,EAAEa;IACb,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1BjB,QAAQ,CAAC;MACLE,IAAI,EAAEV;IACV,CAAC,CAAC;EACN,CAAC;EAGD,OACI0B,KAAA,CAAC/B,aAAa,CAACgC,QAAQ;IACnBC,KAAK,EAAE;MACHxB,OAAO,EAAEG,KAAK,CAACH,OAAO;MACtBC,SAAS,EAAEE,KAAK,CAACF,SAAS;MAC1BC,KAAK,EAAEC,KAAK,CAACD,KAAK;MAClBG,cAAc;MACdG,eAAe;MACfW,iBAAiB;MACjBE;IACJ,CAAE;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,QACHhC,QACqB,CAAC;AAEjC,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}