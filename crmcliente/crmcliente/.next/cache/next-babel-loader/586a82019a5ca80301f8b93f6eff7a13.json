{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject;\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport Select from 'react-select';\nimport { gql, useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContext';\nvar OBTENER_CLIENTES_USUARIO = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    query obtenerClientesVendedor {\\n        obtenerClientesVendedor {\\n            id\\n            nombre\\n            apellido\\n            empresa\\n            email\\n        }\\n    }\\n\"])));\nvar AsignarCliente = function AsignarCliente() {\n  var _useState = useState([]),\n    cliente = _useState[0],\n    setCliente = _useState[1];\n\n  // Context de pedidos\n  var pedidoContext = useContext(PedidoContext);\n  var agregarCliente = pedidoContext.agregarCliente;\n\n  // Consultar la base de datos\n  var _useQuery = useQuery(OBTENER_CLIENTES_USUARIO),\n    data = _useQuery.data,\n    loading = _useQuery.loading,\n    error = _useQuery.error;\n\n  // console.log(data)\n  // console.log(loading)\n  // console.log(error)\n\n  useEffect(function () {\n    agregarCliente(cliente);\n  }, [cliente]);\n  var seleccionarCliente = function seleccionarCliente(clientes) {\n    setCliente(clientes);\n  };\n\n  // Resultados de la consulta\n  if (loading) return null;\n  var obtenerClientesVendedor = data.obtenerClientesVendedor;\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\"\n  }, \"1.- Asigna un Cliente al pedido\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: obtenerClientesVendedor,\n    onChange: function onChange(opcion) {\n      return seleccionarCliente(opcion);\n    },\n    getOptionValue: function getOptionValue(opciones) {\n      return opciones.id;\n    },\n    getOptionLabel: function getOptionLabel(opciones) {\n      return opciones.nombre;\n    },\n    placeholder: \"Busque o Seleccione el Cliente\",\n    noOptionsMessage: function noOptionsMessage() {\n      return \"No hay resultados\";\n    }\n  }));\n};\nexport default AsignarCliente;","map":null,"metadata":{},"sourceType":"module"}