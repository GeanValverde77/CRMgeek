{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\geanm\\\\Downloads\\\\crmcliente\\\\crmcliente\\\\context\\\\pedidos\\\\PedidoState.js\";\nvar __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useReducer } from 'react';\nimport PedidoContext from './PedidoContext';\nimport PedidoReducer from './PedidoReducer';\nimport { SELECCIONAR_CLIENTE, SELECCIONAR_PRODUCTO, CANTIDAD_PRODUCTOS, ACTUALIZAR_TOTAL } from '../../types';\nvar PedidoState = function PedidoState(_ref) {\n  var children = _ref.children;\n  // State de Pedidos\n  var initialState = {\n    cliente: {},\n    productos: [],\n    total: 0\n  };\n  var _useReducer = useReducer(PedidoReducer, initialState),\n    state = _useReducer[0],\n    dispatch = _useReducer[1];\n\n  // Modifica el Cliente\n  var agregarCliente = function agregarCliente(cliente) {\n    // console.log(cliente);\n\n    dispatch({\n      type: SELECCIONAR_CLIENTE,\n      payload: cliente\n    });\n  };\n\n  // Modifica los productos\n  var agregarProducto = function agregarProducto(productosSeleccionados) {\n    var nuevoState;\n    if (state.productos.length > 0) {\n      // Tomar del segundo arreglo, una copia para asignarlo al primero\n      nuevoState = productosSeleccionados.map(function (producto) {\n        var nuevoObjeto = state.productos.find(function (productoState) {\n          return productoState.id === producto.id;\n        });\n        return _objectSpread({}, producto, {}, nuevoObjeto);\n      });\n    } else {\n      nuevoState = productosSeleccionados;\n    }\n    dispatch({\n      type: SELECCIONAR_PRODUCTO,\n      payload: nuevoState\n    });\n  };\n\n  // Modifica las cantidades de los productos\n  var cantidadProductos = function cantidadProductos(nuevoProducto) {\n    dispatch({\n      type: CANTIDAD_PRODUCTOS,\n      payload: nuevoProducto\n    });\n  };\n  var actualizarTotal = function actualizarTotal() {\n    dispatch({\n      type: ACTUALIZAR_TOTAL\n    });\n  };\n  return __jsx(PedidoContext.Provider, {\n    value: {\n      cliente: state.cliente,\n      productos: state.productos,\n      total: state.total,\n      agregarCliente: agregarCliente,\n      agregarProducto: agregarProducto,\n      cantidadProductos: cantidadProductos,\n      actualizarTotal: actualizarTotal\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \" \", children);\n};\nexport default PedidoState;","map":{"version":3,"names":["React","useReducer","PedidoContext","PedidoReducer","SELECCIONAR_CLIENTE","SELECCIONAR_PRODUCTO","CANTIDAD_PRODUCTOS","ACTUALIZAR_TOTAL","PedidoState","_ref","children","initialState","cliente","productos","total","_useReducer","state","dispatch","agregarCliente","type","payload","agregarProducto","productosSeleccionados","nuevoState","length","map","producto","nuevoObjeto","find","productoState","id","_objectSpread","cantidadProductos","nuevoProducto","actualizarTotal","__jsx","Provider","value","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/geanm/Downloads/crmcliente/crmcliente/context/pedidos/PedidoState.js"],"sourcesContent":["import  React, { useReducer } from 'react';\nimport PedidoContext from './PedidoContext';\nimport PedidoReducer from './PedidoReducer';\n\nimport {\n    SELECCIONAR_CLIENTE,\n    SELECCIONAR_PRODUCTO,\n    CANTIDAD_PRODUCTOS,\n    ACTUALIZAR_TOTAL\n} from '../../types'\n\nconst PedidoState = ({children}) => {\n\n    // State de Pedidos\n    const initialState = {\n        cliente: {},\n        productos: [],\n        total: 0\n    }\n\n    const [ state, dispatch ] = useReducer(PedidoReducer, initialState);\n\n    // Modifica el Cliente\n    const agregarCliente = cliente => {\n        // console.log(cliente);\n\n        dispatch({\n            type: SELECCIONAR_CLIENTE,\n            payload: cliente\n        })\n    }\n\n    // Modifica los productos\n    const agregarProducto = productosSeleccionados => {\n\n        let nuevoState;\n        if(state.productos.length > 0 ) {\n            // Tomar del segundo arreglo, una copia para asignarlo al primero\n            nuevoState = productosSeleccionados.map( producto => {\n                const nuevoObjeto = state.productos.find( productoState => productoState.id === producto.id  );\n                return {...producto, ...nuevoObjeto }\n            } )\n        } else {\n            nuevoState = productosSeleccionados;\n        }\n       \n        dispatch({\n            type: SELECCIONAR_PRODUCTO,\n            payload: nuevoState\n        })\n    }\n\n    // Modifica las cantidades de los productos\n    const cantidadProductos = nuevoProducto => {\n        dispatch({\n            type: CANTIDAD_PRODUCTOS,\n            payload: nuevoProducto\n        })\n    }\n\n    const actualizarTotal = () => {\n        dispatch({\n            type: ACTUALIZAR_TOTAL\n        })\n    }\n\n\n    return (\n        <PedidoContext.Provider\n            value={{\n                cliente: state.cliente,\n                productos: state.productos,\n                total: state.total,\n                agregarCliente,\n                agregarProducto,\n                cantidadProductos,\n                actualizarTotal\n            }}\n        > {children}\n        </PedidoContext.Provider>\n    )\n}\n\nexport default PedidoState;"],"mappings":";;;;;;AAAA,OAAQA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAC1C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,SACIC,mBAAmB,EACnBC,oBAAoB,EACpBC,kBAAkB,EAClBC,gBAAgB,QACb,aAAa;AAEpB,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAmB;EAAA,IAAdC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAE1B;EACA,IAAMC,YAAY,GAAG;IACjBC,OAAO,EAAE,CAAC,CAAC;IACXC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE;EACX,CAAC;EAED,IAAAC,WAAA,GAA4Bd,UAAU,CAACE,aAAa,EAAEQ,YAAY,CAAC;IAA3DK,KAAK,GAAAD,WAAA;IAAEE,QAAQ,GAAAF,WAAA;;EAEvB;EACA,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAGN,OAAO,EAAI;IAC9B;;IAEAK,QAAQ,CAAC;MACLE,IAAI,EAAEf,mBAAmB;MACzBgB,OAAO,EAAER;IACb,CAAC,CAAC;EACN,CAAC;;EAED;EACA,IAAMS,eAAe,GAAG,SAAlBA,eAAeA,CAAGC,sBAAsB,EAAI;IAE9C,IAAIC,UAAU;IACd,IAAGP,KAAK,CAACH,SAAS,CAACW,MAAM,GAAG,CAAC,EAAG;MAC5B;MACAD,UAAU,GAAGD,sBAAsB,CAACG,GAAG,CAAE,UAAAC,QAAQ,EAAI;QACjD,IAAMC,WAAW,GAAGX,KAAK,CAACH,SAAS,CAACe,IAAI,CAAE,UAAAC,aAAa;UAAA,OAAIA,aAAa,CAACC,EAAE,KAAKJ,QAAQ,CAACI,EAAE;QAAA,CAAE,CAAC;QAC9F,OAAAC,aAAA,KAAWL,QAAQ,MAAKC,WAAW;MACvC,CAAE,CAAC;IACP,CAAC,MAAM;MACHJ,UAAU,GAAGD,sBAAsB;IACvC;IAEAL,QAAQ,CAAC;MACLE,IAAI,EAAEd,oBAAoB;MAC1Be,OAAO,EAAEG;IACb,CAAC,CAAC;EACN,CAAC;;EAED;EACA,IAAMS,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAGC,aAAa,EAAI;IACvChB,QAAQ,CAAC;MACLE,IAAI,EAAEb,kBAAkB;MACxBc,OAAO,EAAEa;IACb,CAAC,CAAC;EACN,CAAC;EAED,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC1BjB,QAAQ,CAAC;MACLE,IAAI,EAAEZ;IACV,CAAC,CAAC;EACN,CAAC;EAGD,OACI4B,KAAA,CAACjC,aAAa,CAACkC,QAAQ;IACnBC,KAAK,EAAE;MACHzB,OAAO,EAAEI,KAAK,CAACJ,OAAO;MACtBC,SAAS,EAAEG,KAAK,CAACH,SAAS;MAC1BC,KAAK,EAAEE,KAAK,CAACF,KAAK;MAClBI,cAAc,EAAdA,cAAc;MACdG,eAAe,EAAfA,eAAe;MACfW,iBAAiB,EAAjBA,iBAAiB;MACjBE,eAAe,EAAfA;IACJ,CAAE;IAAAI,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,QACHlC,QACqB,CAAC;AAEjC,CAAC;AAED,eAAeF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}